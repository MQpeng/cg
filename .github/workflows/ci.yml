name: CI

on:
  release:
    types: [created]

env:
  BINARY_PREFIX: "cg"
  BINARY_SUFFIX: ""
  COMMIT_ID: "${{ github.sha }}"
  PR_PROMPT: "::warning:: Build artifact will not be uploaded due to the workflow is trigged by pull request."

jobs:
  publish:
    name: Publish npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npm run version
      - run: npm run build
      - run: cd npm/cg && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  build:
    needs: publish
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: "386"
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version: '1.20'
      - name: Setup Node environment
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Build binary file
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          IS_PR: ${{ !!github.head_ref }}
        run: |
          if [ $GOOS = "windows" ]; then export BINARY_SUFFIX="$BINARY_SUFFIX.exe"; fi
          if $IS_PR ; then echo $PR_PROMPT; fi
          export CG_VERSION=$(cat version.txt)
          export BINARY_NAME="$BINARY_PREFIX""$BINARY_SUFFIX"
          export CGO_ENABLED=0
          export LD_FLAGS="-w -s -X main.Version=${CG_VERSION}"
          go build -o "output/$BINARY_NAME" -trimpath -ldflags "$LD_FLAGS" ./cmd/cg
          mkdir ./npm/@cg/$GOOS-$GOARCH/bin
          cp output/$BINARY_NAME ./npm/@cg/$GOOS-$GOARCH/bin/
          node scripts/esbuild.js npm/@cg/$GOOS-$GOARCH/package.json --version
          cd ./npm/@cg/$GOOS-$GOARCH
          npm publish --access public
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: ${{ !github.head_ref }}
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: output/



